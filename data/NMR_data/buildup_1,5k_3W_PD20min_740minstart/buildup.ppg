// 
version=2.0;

uses = defaultGates.gate;
// defaultGates.gate is located in the "gates" folder in the application directory.

transform F1Freq=#+180;
// DDS(II) signal is to be down-converted with an intermediate frequency of 180 MHz.
// Accordingly, we want it generating the frequency 180 MHz above the carrier freq.

CLK=160;  // PPG Clock frequency 

freq f1=12.747; 
freq f1Offset_kHz=0; 

amp a=3; 
amp b=50; 
//amp c=50; 


time pw1=1u; 
//time pw2=5u; 
time tau=30u; 

//time Dur=180s; 

time rd=7u(receiver delay); 
time ad=18u(acquisition delay); 

const int AD9858_2GHZ_DISABLE=16472; 
// This is not going to be altered, and thus is declared with "const",
// so that it does not appear in the variable edit table.

//-----  aux parameters  -----
aux PD=1198s(Pulse Delay); 
aux NA=1(Number of Accum); 
aux DW=1u(DWell time); 
aux AL=256(Acquisition Length); 
aux ND=0(Number of Dummy scans); 

//----- phase cycle  -----
//phaselist pList=(ch1; x,y,-x,-y);
//acqphase=x,y,-x,-y;

acqphase=x;

// Any command before "start" should finish with a semicolon (;).
start   
// Implementation begins with a "start" command.
// Commands between "start" and "init" is implemented ONCE for each run.

  pulse(50n; F1FreqRST)
//  AD9858 (DDS chip) initialization
  pulse(50n; F1Freq(setup;AD9858_2GHz_DISABLE))
//  We use a 1 GHz clock, and disable 2 GHz divider, 

  delay(1m)
  pulse(5000n; F1Freq(f1+0.001*f1Offset_kHz))
  delay(1m)

Init // Commeands between "Init" and "Relax" are repeated NA(+ND) times.  

//saturation

//DNP

//inversion pulse
//  pulse(10u;                                   F3TTL1)
//  pulse(0.7s)
//  pulse(10u;                                F1_Unblank)
//  pulse(pw2; F1Amp(c), F1phase(104.5), F1_Gate, F1_Unblank)
//  pulse(2*pw2; F1Amp(c), F1phase(313.4), F1_Gate, F1_Unblank)
//  pulse(pw2; F1Amp(c), F1phase(104.5), F1_Gate, F1_Unblank)
//  pulse(pw2; F1Amp(c), F1phase(0), F1_Gate, F1_Unblank)
//  pulse(3s)


//NMR detection
  pulse(10u;                                   F3TTL1)
  pulse(0.7s)
  pulse(10u;                                F1_Unblank)
  //pulse(tau; F1Amp(b), F1phase(90), F1_Gate, F1_Unblank)
  //pulse(tau; F1Amp(b), F1phase(270), F1_Gate, F1_Unblank)
  pulse(pw1; F1Amp(a), F1phase(0), F1_Gate, F1_Unblank)
  pulse(rd)
  pulse(ad; RG)
  pulse(dw*al;  ST, RG)
relax   
